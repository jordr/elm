====== Elm Developper Information ======

===== Organization =====

Directories:
  * include/		ELM headers.
  * src/			ELM sources.
  * test/			Test programs.
  * perf/			Performances test programs and data.
  * tools/			Tool to work with ELM.

===== Working with sources =====

Bootstrap:
<code sh>
	cmake .
</code>

Under Windows (MINGW required):
<code sh>
	cmake . -G "MSYS Makefiles"
</code>

Auto-documentation:
<code>
	doxygen
	xdg-open autodoc/index.html
</code>

Activating the test compilation:
	cmake . -DWITH_TEST=yes

Testing:
	cd test
	./dotest		launch all automated tests
	./test-thread	thread classes

Under Windows:
	move src/libelm.dll to test/


===== Documentation =====

All classes, function, macros, variable or type provided
to uses must be documented using the [[http://www.stack.nl/~dimitri/doxygen/|Doxygen]]
tool. Doxygen automatic documentation is very close to JavaDoc but provides 
more flexibility and support for C++. The syntax detail can be found
[[http://www.stack.nl/~dimitri/doxygen/manual/commands.html|here]].

Additionally, Doxygen supports Markdown wiki syntax that may be found
[[http://daringfireball.net/projects/markdown/syntax|here]]. Below is a non-exhaustive
list of markdown syntax:
  * \n to create a new paragraph,
  * title \n ==== or # title # to create a section
  * title \n ---- or ## title ## to create a new section
  * > text to create a blockquote
  * */+/- text for a bulleted list
  * 1. text for a numbered list
  * \t text for code block
  * - - - for horizontal rule
  * [text](url) for a link
  * *text* or _text_ for emphasized text
  * **text** or __text__ for even more emphasized text
  * \c to avoid c to be used as special character
  * `text` for code text
  * ![alternate text](url) to include an image
  * ![alternate text](url caption) to include an image with caption
  * <url> for explicit link
  * 

An important rule must be applied: no documentation must be put in the header
file. Classes has to be described in the source file. For a class, a special comment
like below must be set:
<code c++>
/**
 * @class MY_CLASS
 * documentation
 */
</code>

For an inlined function, the documentation must be put in the source file as:
<code c++>
/**
 * @fn RETURN_TYPE MY_CLASS::FUNCTION_NAME(PARAMETERS);
 * documentation
 */
</code>

All resources provided by ELM must be located in a module using the Doxygen
directive @ingroup (at the end of the description):
<code c++>
/**
 * documentation
 * @ingroup MODULE
 */
</code>

The list of available modules may be obtained from the automatic documentation.


===== Development Directives =====


